#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>
#include <Cassert>
#include "windows.h"
#include "String.h"
#include <cstdio>
#include <iostream>
#include <cstdlib>

void change_s(int* i, int l, char* buffer, String* s, int* quantityStrings)
{
    for (int j = 0; j < 7; j++)
    {
        *s += buffer[*i];
        if (*i < l - 1)
        {
            *i = *i + 1;
        }
        else
        {
            *i = 0;
        }
        
        if (buffer[*i] == '\n')
        {
            *quantityStrings = *quantityStrings + 1;
            //std::cout << text.getScale() << std::endl;
        }
    }
}

int main()
{
    int windowX = 1200;
    int windowY = 800;
 
#pragma warning(disable : 4996)
    FILE* file = fopen("C:\\Users\\Дмитрий\\Documents\\qwer.txt", "rb");

    fseek(file, 0, SEEK_END);
    long lSize = ftell(file);
    rewind(file);

    char* buffer = (char*)malloc(sizeof(char) * lSize); 

    size_t result = fread(buffer, 1, lSize, file);

    String bufferString(buffer);
    int lengthbuffer = bufferString.length();

    fclose(file);
    
    String textInWindow;

    sf::Font font;
    int sizeFont = 10;
	font.loadFromFile("C:\\Users\\Дмитрий\\Documents\\19924.ttf");
	sf::Text text(textInWindow.string, font, sizeFont);
	text.setFillColor(sf::Color(0, 255, 0));
    text.setLineSpacing(2);
    
    sf::RenderWindow window(sf::VideoMode(windowX, windowY), "Window");
    sf::View view;
    view = window.getView();
    int numberSymbol = 0;
    int quantityStrings = 0;
    int quantityStrings2 = 0;

    while (window.isOpen())
    {
        
        sf::Event event;
        while (window.pollEvent(event))
        {
            if (event.type == sf::Event::Closed)
            {
                window.close();
            }
            else if (event.type == sf::Event::KeyPressed)
            {
                change_s(&numberSymbol, lengthbuffer, buffer, &textInWindow, &quantityStrings2);
                
            }
            if (event.type == sf::Event::MouseWheelScrolled)
            {
                view.move(0, -event.mouseWheelScroll.delta * 30);
            }
        }
        text.setString(textInWindow.string);

        if (quantityStrings > windowY / sizeFont)
        {
            if (quantityStrings2 > quantityStrings)
            {
                view.move(0, sizeFont);
                
            }
        }
        else
        {
            if (quantityStrings2 > windowY / sizeFont)
            {
                view.move(0, sizeFont);
            }
        }

        quantityStrings = quantityStrings2;
        sf::Vector2f a = text.getOrigin();
        std::cout << a.x << std::endl;
        std::cout << a.y << std::endl;
        

        window.clear();
        window.setView(view);
        window.draw(text);
        window.display();
    }
	
	return 0;
}
