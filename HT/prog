#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>
#include <Cassert>
#include "windows.h"
#include "String.h"
#include <cstdio>
#include <iostream>
#include <cstdlib>

void changeTextInWindow(String* textInWindow, int* numberSymbol, int lengthOfTextOriginal, char* textOriginal, int quantitySymbolInPress)
{
    for (int j = 0; j < quantitySymbolInPress; j++)
    {
        *textInWindow += textOriginal[*numberSymbol];
        if (*numberSymbol < lengthOfTextOriginal - 1)
            *numberSymbol++;
        else
            *numberSymbol = 0;
    }
}

int countStringsInWindow(int* quantityStringsInWindow, int numberSymbol, char* textOriginal, int quantitySymbolInPress)
{
    for (int j = numberSymbol; j < numberSymbol + quantitySymbolInPress; j++)
    {
        if (textOriginal[j] == '\n')
            *quantityStringsInWindow++;
    }
}

int main()
{
    int windowX = 1200;
    int windowY = 800;
    int quantitySymbolInPress = 7;

#pragma warning(disable : 4996)
    FILE* file = fopen("C:\\Users\\Дмитрий\\Documents\\qwer.txt", "rb");

    fseek(file, 0, SEEK_END);
    long lSize = ftell(file);
    rewind(file);

    char* buffer = (char*)malloc(sizeof(char) * lSize);

    size_t result = fread(buffer, 1, lSize, file);

    String bufferString(buffer);
    int lengthbuffer = bufferString.length();

    fclose(file);

    String textInWindow;

    sf::Font font;
    int sizeFont = 15;
    font.loadFromFile("C:\\Users\\Дмитрий\\Documents\\19924.ttf");
    sf::Text text(textInWindow.string, font, sizeFont);
    text.setFillColor(sf::Color(0, 255, 0));

    sf::RenderWindow window(sf::VideoMode(windowX, windowY), "Window");
    sf::View view;
    view = window.getView();
    int numberSymbol = 0;
    int quantityStrings = 0;
    int quantityStrings2 = 0;

    while (window.isOpen())
    {

        sf::Event event;
        while (window.pollEvent(event))
        {
            if (event.type == sf::Event::Closed)
            {
                window.close();
            }
            if (event.type == sf::Event::KeyPressed)
            {
                change(&numberSymbol, lengthbuffer, buffer, &textInWindow, &quantityStrings2);

            }
            if (event.type == sf::Event::MouseWheelScrolled)
            {
                view.move(0, -event.mouseWheelScroll.delta * 30);
            }
        }
        text.setString(textInWindow.string);

        if (quantityStrings > windowY / sizeFont)
        {
            if (quantityStrings2 > quantityStrings)
            {
                view.move(0, sizeFont);

            }
        }
        else
        {
            if (quantityStrings2 > windowY / sizeFont)
            {
                view.move(0, sizeFont);
            }
        }

        quantityStrings = quantityStrings2;


        window.clear();
        window.setView(view);
        window.draw(text);
        window.display();
    }

    return 0;
}
